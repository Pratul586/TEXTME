{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Project\\\\chat-app\\\\frontend\\\\src\\\\Context\\\\ChatProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nconst ChatProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n  const history = useHistory();\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    console.log('ChatProvider mounted:', isMounted.current);\n    console.log('userInfo:', userInfo);\n    if (isMounted.current) {\n      setUser(userInfo);\n      if (!userInfo) {\n        console.log('Navigating to /');\n        history.push(\"/\");\n      }\n    }\n    return () => {\n      console.log('ChatProvider unmounted');\n      isMounted.current = false;\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      selectedChat,\n      setSelectedChat,\n      user,\n      setUser,\n      notification,\n      setNotification,\n      chats,\n      setChats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatProvider, \"FPtvKdXE86cTU+alnkqvYbxKZgw=\", false, function () {\n  return [useHistory];\n});\n_c = ChatProvider;\nexport const ChatState = () => {\n  _s2();\n  return useContext(ChatContext);\n};\n_s2(ChatState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = ChatState;\nexport default ChatProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatProvider\");\n$RefreshReg$(_c2, \"ChatState\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useRef","useHistory","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","_s","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","isMounted","userInfo","JSON","parse","localStorage","getItem","console","log","current","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatState","_s2","_c2","$RefreshReg$"],"sources":["E:/React Project/chat-app/frontend/src/Context/ChatProvider.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n    const [selectedChat, setSelectedChat] = useState();\r\n    const [user, setUser] = useState();\r\n    const [notification, setNotification] = useState([]);\r\n    const [chats, setChats] = useState();\r\n    const history = useHistory();\r\n    const isMounted = useRef(true);\r\n\r\n    useEffect(() => {\r\n        const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        console.log('ChatProvider mounted:', isMounted.current);\r\n        console.log('userInfo:', userInfo);\r\n        \r\n        if (isMounted.current) {\r\n            setUser(userInfo);\r\n\r\n            if (!userInfo) {\r\n                console.log('Navigating to /');\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('ChatProvider unmounted');\r\n            isMounted.current = false;\r\n        };\r\n    }, [history]);\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            selectedChat,\r\n            setSelectedChat,\r\n            user,\r\n            setUser,\r\n            notification,\r\n            setNotification,\r\n            chats,\r\n            setChats,\r\n        }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n\r\nexport const ChatState = () => {\r\n    return useContext(ChatContext);\r\n}\r\n\r\nexport default ChatProvider;\r\n\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC9E,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EACpC,MAAMkB,OAAO,GAAGf,UAAU,CAAC,CAAC;EAC5B,MAAMgB,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,SAAS,CAACQ,OAAO,CAAC;IACvDF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC;IAElC,IAAID,SAAS,CAACQ,OAAO,EAAE;MACnBd,OAAO,CAACO,QAAQ,CAAC;MAEjB,IAAI,CAACA,QAAQ,EAAE;QACXK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9BR,OAAO,CAACU,IAAI,CAAC,GAAG,CAAC;MACrB;IACJ;IAEA,OAAO,MAAM;MACTH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCP,SAAS,CAACQ,OAAO,GAAG,KAAK;IAC7B,CAAC;EACL,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,oBACIb,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MACzBpB,YAAY;MACZC,eAAe;MACfC,IAAI;MACJC,OAAO;MACPC,YAAY;MACZC,eAAe;MACfC,KAAK;MACLC;IACJ,CAAE;IAAAT,QAAA,EACGA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAzB,EAAA,CA1CKF,YAAY;EAAA,QAKEJ,UAAU;AAAA;AAAAgC,EAAA,GALxB5B,YAAY;AA4ClB,OAAO,MAAM6B,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOtC,UAAU,CAACO,WAAW,CAAC;AAClC,CAAC;AAAA+B,GAAA,CAFYD,SAAS;AAAAE,GAAA,GAATF,SAAS;AAItB,eAAe7B,YAAY;AAAC,IAAA4B,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}