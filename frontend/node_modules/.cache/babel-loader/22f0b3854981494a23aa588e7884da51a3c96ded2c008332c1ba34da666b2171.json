{"ast":null,"code":"var _jsxFileName = \"D:\\\\previous drive\\\\React Project\\\\chat-app\\\\frontend\\\\src\\\\components\\\\SingleChat.js\",\n  _s = $RefreshSig$();\nimport { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./Authentication/miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./Authentication/miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\nconst SingleChat = ({\n  fetchAgain,\n  setFetchAgain\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    socket.on(\"message recieved\", newMessageRecieved => {\n      if (!selectedChatCompare || selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages(prevMessages => [...prevMessages, newMessageRecieved]);\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [selectedChat, fetchAgain, notification, setNotification]);\n  useEffect(() => {\n    if (selectedChat) {\n      fetchMessages();\n      selectedChatCompare = selectedChat;\n    }\n  }, [selectedChat]);\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(`/api/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n  const sendMessage = async event => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        const {\n          data\n        } = await axios.post(\"/api/message\", {\n          content: newMessage,\n          chatId: selectedChat\n        }, config);\n        socket.emit(\"new message\", data);\n        setMessages(prevMessages => [...prevMessages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occurred!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\"\n        });\n      }\n    }\n  };\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        display: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          display: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), messages && (!selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderFull(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchMessages: fetchMessages,\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          w: 20,\n          h: 20,\n          alignSelf: \"center\",\n          margin: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(ScrollableChat, {\n            messages: messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onKeyDown: sendMessage,\n          id: \"first-name\",\n          isRequired: true,\n          mt: 3,\n          children: [istyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Lottie, {\n              options: defaultOptions,\n              width: 70,\n              style: {\n                marginBottom: 15,\n                marginLeft: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"#E0E0E0\",\n            placeholder: \"Enter a message...\",\n            value: newMessage,\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Inter\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(SingleChat, \"+sfWAiH4HzaqTI+jt/U5OUzRS4Q=\", false, function () {\n  return [useToast];\n});\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","jsxDEV","_jsxDEV","Fragment","_Fragment","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","_s","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","emit","user","on","newMessageRecieved","_id","chat","notification","includes","setNotification","prevMessages","disconnect","selectedChat","fetchMessages","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","children","fontSize","base","md","pb","px","w","display","justifyContent","alignItems","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setSelectedChat","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","id","isRequired","mt","options","width","style","marginBottom","marginLeft","variant","placeholder","onChange","fontFamily","_c","$RefreshReg$"],"sources":["D:/previous drive/React Project/chat-app/frontend/src/components/SingleChat.js"],"sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./Authentication/miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./Authentication/miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\n\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || \r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages((prevMessages) => [...prevMessages, newMessageRecieved]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [selectedChat, fetchAgain, notification, setNotification]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      fetchMessages();\r\n      selectedChatCompare = selectedChat;\r\n    }\r\n  }, [selectedChat]);\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(`/api/message/${selectedChat._id}`, config);\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occurred!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner size=\"xl\" w={20} h={20} alignSelf=\"center\" margin=\"auto\" />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n            <FormControl onKeyDown={sendMessage} id=\"first-name\" isRequired mt={3}>\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message...\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Inter\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n\r\n\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}