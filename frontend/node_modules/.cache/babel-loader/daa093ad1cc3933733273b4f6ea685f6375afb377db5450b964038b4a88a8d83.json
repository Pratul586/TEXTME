{"ast":null,"code":"import{FormControl}from\"@chakra-ui/form-control\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import\"./styles.css\";import{IconButton,Spinner,useToast}from\"@chakra-ui/react\";import{getSender,getSenderFull}from\"../config/ChatLogics\";import{useEffect,useState}from\"react\";import axios from\"axios\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import ProfileModal from\"./Authentication/miscellaneous/ProfileModal\";import ScrollableChat from\"./ScrollableChat\";import Lottie from\"react-lottie\";import animationData from\"../animations/typing.json\";import io from\"socket.io-client\";import UpdateGroupChatModal from\"./Authentication/miscellaneous/UpdateGroupChatModal\";import{ChatState}from\"../Context/ChatProvider\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ENDPOINT=\"http://localhost:5000\";// \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket,selectedChatCompare;const SingleChat=_ref=>{let{fetchAgain,setFetchAgain}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[newMessage,setNewMessage]=useState(\"\");const[socketConnected,setSocketConnected]=useState(false);const[typing,setTyping]=useState(false);const[istyping,setIsTyping]=useState(false);const toast=useToast();const{selectedChat,setSelectedChat,user,notification,setNotification}=ChatState();const defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};useEffect(()=>{socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",()=>setSocketConnected(true));socket.on(\"typing\",()=>setIsTyping(true));socket.on(\"stop typing\",()=>setIsTyping(false));socket.on(\"message recieved\",newMessageRecieved=>{if(!selectedChatCompare||selectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved,...notification]);setFetchAgain(!fetchAgain);}}else{setMessages(prevMessages=>[...prevMessages,newMessageRecieved]);}});return()=>{socket.disconnect();};},[selectedChat,fetchAgain,notification,setNotification]);useEffect(()=>{if(selectedChat){fetchMessages();selectedChatCompare=selectedChat;}},[selectedChat]);const fetchMessages=async()=>{if(!selectedChat)return;try{const config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);const{data}=await axios.get(\"/api/message/\".concat(selectedChat._id),config);setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);}catch(error){toast({title:\"Error Occurred!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}};const sendMessage=async event=>{if(event.key===\"Enter\"&&newMessage){socket.emit(\"stop typing\",selectedChat._id);try{const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};setNewMessage(\"\");const{data}=await axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat},config);socket.emit(\"new message\",data);setMessages(prevMessages=>[...prevMessages,data]);}catch(error){toast({title:\"Error Occurred!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}}};const typingHandler=e=>{setNewMessage(e.target.value);if(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id);}let lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(()=>{var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",display:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{display:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>setSelectedChat(\"\")}),messages&&(!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchMessages:fetchMessages,fetchAgain:fetchAgain,setFetchAgain:setFetchAgain})]}))]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,id:\"first-name\",isRequired:true,mt:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Lottie,{options:defaultOptions,width:70,style:{marginBottom:15,marginLeft:0}})}):null,/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message...\",value:newMessage,onChange:typingHandler})]})]})]}):/*#__PURE__*/_jsx(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Inter\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ENDPOINT","socket","selectedChatCompare","SingleChat","_ref","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","selectedChat","setSelectedChat","user","notification","setNotification","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","emit","on","newMessageRecieved","_id","chat","includes","prevMessages","disconnect","fetchMessages","config","headers","Authorization","concat","token","data","get","error","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","children","fontSize","base","md","pb","px","w","display","justifyContent","alignItems","icon","onClick","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","id","isRequired","mt","options","width","style","marginBottom","marginLeft","variant","placeholder","onChange","fontFamily"],"sources":["E:/React Project/chat-app/frontend/src/components/SingleChat.js"],"sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./Authentication/miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./Authentication/miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\n \r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || \r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages((prevMessages) => [...prevMessages, newMessageRecieved]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [selectedChat, fetchAgain, notification, setNotification]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChat) {\r\n      fetchMessages();\r\n      selectedChatCompare = selectedChat;\r\n    }\r\n  }, [selectedChat]);\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(`/api/message/${selectedChat._id}`, config);\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occurred!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner size=\"xl\" w={20} h={20} alignSelf=\"center\" margin=\"auto\" />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n            <FormControl onKeyDown={sendMessage} id=\"first-name\" isRequired mt={3}>\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message...\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Inter\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n\r\n\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}